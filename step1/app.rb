require 'telegram/bot'

token = '8275366314:AAFh97u2XTHIw2OVKlOpyrS-NN4NflPVFls'

# –•—ç—à –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}

Telegram::Bot::Client.run(token) do |bot|
  bot.listen do |message|
    case message
    when Telegram::Bot::Types::Message
      case message.text
      when '/start'
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–∏—Ñ–∫—É hello.gif
        bot.api.send_animation(
          chat_id: message.chat.id,
          animation: Faraday::UploadIO.new('hello.gif', 'image/gif')
        )
        
        sleep(1)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.api.send_message(chat_id: message.chat.id, text: "–°—Ç–µ—à–∞! –ù–∞–∫–æ–Ω–µ—Ü-—Ç–æ! –° –î–Ω—ë–º –†–æ–∂–¥–µ–Ω–∏—è! –£ –º–µ–Ω—è —Ç—É—Ç –¥–ª—è —Ç–µ–±—è —Å—é—Ä–ø—Ä–∏–∑–∏–∫ –ø—Ä–∏–ø—Ä—è—Ç–∞–Ω...")
        
        sleep(4)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É tort.png
        bot.api.send_photo(
          chat_id: message.chat.id,
          photo: Faraday::UploadIO.new('tort.jpg', 'image/jpg')
        )
        
        sleep(2)


        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.api.send_message(chat_id: message.chat.id, text: "–û–π, –∫–∞–∂–µ—Ç—Å—è —ç—Ç–æ—Ç —Ç–æ—Ä—Ç –±—ã–ª –¥–ª—è –ì–∞—Ä—Ä–∏... –ù—É –º—ã –µ–º—É –Ω–∏—á–µ–≥–æ –Ω–µ —Å–∫–∞–∂–µ–º, –ø—Ä–∞–≤–¥–∞?")
        
        sleep(4)

        # –°–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –≤–º–µ—Å—Ç–µ
        buttons = [[Telegram::Bot::Types::InlineKeyboardButton.new(text: '–ü—Ä–æ—á–∏—Ç–∞—Ç—å –ø–∏—Å—å–º–æ', callback_data: 'read_letter')]]
        markup = Telegram::Bot::Types::InlineKeyboardMarkup.new(inline_keyboard: buttons)
        bot.api.send_message(
          chat_id: message.chat.id,
          text: '–ò–∑–≤–∏–Ω–∏, —è –Ω–µ –º–æ–≥—É –¥–æ–ª–≥–æ —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å. –î–µ–ª–∞ –≤ –•–æ–≥–≤–∞—Ä–¥—Å–µ –æ—á–µ–Ω—å —Å–µ—Ä—å—ë–∑–Ω—ã–µ... –ú–Ω–µ –∫–æ–µ-–∫—Ç–æ –ø–µ—Ä–µ–¥–∞–ª –¥–ª—è —Ç–µ–±—è —ç—Ç–æ –ø–∏—Å—å–º–æ, –≤–µ–ª–µ–ª –Ω–∏–∫–æ–º—É –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å. –ü—Ä–æ—á—Ç–∏, –¥–∞ –ø–æ–±—ã—Å—Ç—Ä–µ–µ!',
          reply_markup: markup
        )
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_states[message.chat.id] = nil

      when '/help'
        bot.api.send_message(chat_id: message.chat.id, text: "–í—Å–ø–æ–º–Ω–∏, –∫–∞–∫–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ –Ω–∞ –≥–µ—Ä–±–µ –ì—Ä–∏—Ñ—Ñ–∏–Ω–¥–æ—Ä–∞!")
      
      else
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ–º –ª–∏ –º—ã –æ—Ç–≤–µ—Ç –æ—Ç —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if user_states[message.chat.id] == 'waiting_for_answer'
          user_answer = message.text.downcase.strip
          
          if ['–ª–µ–≤', '–õ–µ–≤'].include?(user_answer)
            # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
            bot.api.send_message(chat_id: message.chat.id, text: "–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –ù–∞ –≥–µ—Ä–±–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω –ª–µ–≤! ü¶Åüéâ")
            bot.api.send_photo(
              chat_id: message.chat.id,
              photo: Faraday::UploadIO.new('gerb.jpg', 'image/jpg')
            )
            bot.api.send_animation(
              chat_id: message.chat.id,
              animation: Faraday::UploadIO.new('go.gif', 'image/gif')
            )
            bot.api.send_message(chat_id: message.chat.id, text: "–Ø –±—ã –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –¥–æ–≥–∞–¥–∞–ª—Å—è! –ö–∞–∂–µ—Ç—Å—è —Ç—ã —Å–º–æ–≥–ª–∞ —É–∑–Ω–∞—Ç—å –∫—É–¥–∞ –∏–¥—Ç–∏ –¥–∞–ª—å—à–µ, –ø–æ—Ö–æ–∂–µ —Ç–µ–±—è –∂–¥–µ–º –†–∏–º—É—Å! –ï—Å–ª–∏ –±—É–¥—É—Ç –ø—Ä–æ–±–ª–µ–º—ã –ø—Ä–∏ –æ–±—â–µ–Ω–∏–∏ —á–µ—Ä–µ–∑ –º–∞–≥–∏—á–µ—Å–∫—É—é —Å–∫—Ä–∏–∂–∞–ª—å, —Ç–æ —Å–æ–æ–±—â–∏ –µ–º—É @iMprovFL\n–ü–æ—à–ª–∏ —Å–∫–æ—Ä–µ–π! @remus_dr_bot")
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            user_states[message.chat.id] = nil
          else
            # –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
            bot.api.send_message(chat_id: message.chat.id, text: "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! –ü–æ—Å–º–æ—Ç—Ä–∏ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–µ–µ –Ω–∞ –≥–µ—Ä–± –ì—Ä–∏—Ñ—Ñ–∏–Ω–¥–æ—Ä–∞ –∏ –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.")
          end
        end
      end

    when Telegram::Bot::Types::CallbackQuery
      # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É
      if message.data == 'read_letter'
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –ø–∏—Å—å–º–∞
        bot.api.send_animation(
          chat_id: message.from.id,
          animation: Faraday::UploadIO.new('message.gif', 'image/gif')
        )

        bot.api.send_message(
          chat_id: message.from.id, 
          text: "'–°—Ç–µ—Ñ–∞–Ω–∏—è. –ß—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å, –∫—É–¥–∞ —Å–º–æ—Ç—Ä–µ—Ç—å –¥–∞–ª—å—à–µ, –≤—Å–ø–æ–º–Ω–∏ –∫—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω –Ω–∞ –≥–µ—Ä–±–µ –ì—Ä–∏—Ñ—Ñ–∏–Ω–¥–æ—Ä–∞.'"
        )
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–æ–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞" –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_states[message.from.id] = 'waiting_for_answer'
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É
        bot.api.send_message(
          chat_id: message.from.id,
          text: "–ù–∞–ø–∏—à–∏ –æ—Ç–≤–µ—Ç:"
        )
        
        # –û—Ç–≤–µ—Ç –Ω–∞ callback, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å "—á–∞—Å–∏–∫–∏" –Ω–∞ –∫–Ω–æ–ø–∫–µ
        bot.api.answer_callback_query(callback_query_id: message.id)
      end
    end
  end
end