require 'telegram/bot'

token = '7901441008:AAGyZ3pDHtMv7H8OKWUeHbJnkhv8RMBD7Cg'

# –•—ç—à –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_progress = {}

# –£–ª—É—á—à–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
def safe_send(bot, chat_id, &block)
  retries = 0
  begin
    block.call
  rescue Telegram::Bot::Exceptions::ResponseError => e
    if e.error_code == 429
      retry_after = e.response['parameters']['retry_after'] || 30
      puts "–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ñ–¥–µ–º #{retry_after} —Å–µ–∫—É–Ω–¥..."
      sleep(retry_after)
      retries += 1
      retry if retries <= 3
    elsif e.error_code == 400
      if e.message.include?('query is too old') || e.message.include?('response timeout expired') || e.message.include?('query ID is invalid')
        puts "–ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–π –∑–∞–ø—Ä–æ—Å: #{e.message}"
        return # –ü—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –∑–∞–ø—Ä–æ—Å—ã
      else
        raise e
      end
    else
      raise e
    end
  rescue => e
    puts "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: #{e.message}"
    sleep(2)
    retries += 1
    retry if retries <= 2
  end
end

# –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
def send_with_delay(bot, chat_id, delay = 3, &block)
  sleep(delay)
  safe_send(bot, chat_id, &block)
end

# –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥ –±–æ—Ç–∞
Telegram::Bot::Client.run(token) do |bot|
  bot.listen do |message|
    case message
    when Telegram::Bot::Types::Message
      case message.text
      when '/start'
        # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –æ—Ç –≤–∑–≤–æ–ª–Ω–æ–≤–∞–Ω–Ω–æ–≥–æ –î–∞–º–±–ª–¥–æ—Ä–∞
        safe_send(bot, message.chat.id) do
          bot.api.send_animation(
            chat_id: message.chat.id,
            animation: Faraday::UploadIO.new('dumbledore_worried.gif', 'image/gif')
          )
        end

        send_with_delay(bot, message.chat.id, 5) do
          bot.api.send_message(
            chat_id: message.chat.id,
            text: "–°—Ç–µ—à–∞... –Ω–∞–∫–æ–Ω–µ—Ü-—Ç–æ —Ç—ã –∑–¥–µ—Å—å! *–≤–∑–≤–æ–ª–Ω–æ–≤–∞–Ω–Ω–æ –ø–æ–ø—Ä–∞–≤–ª—è–µ—Ç –æ—á–∫–∏* –¢—ã –ø—Ä–æ—à–ª–∞ —ç—Ç–æ—Ç –¥–æ–ª–≥–∏–π –ø—É—Ç—å..."
          )
        end
        
        send_with_delay(bot, message.chat.id, 6) do
          bot.api.send_message(
            chat_id: message.chat.id,
            text: "–ü—Ä–æ—Å—Ç–∏ –∑–∞ –≤—Å–µ —ç—Ç–∏ –∑–∞–≥–∞–¥–∫–∏ –∏ –∏—Å–ø—ã—Ç–∞–Ω–∏—è... –Ω–æ –∏–Ω–∞—á–µ —è –Ω–µ –º–æ–≥. –ò–Ω–∞—á–µ *–û–Ω* –±—ã —Å—Ä–∞–∑—É –Ω–∞—à–µ–ª —Ç–µ–±—è... –¢–æ—Ç, —á—å—ë –∏–º—è –Ω–µ–ª—å–∑—è –ø—Ä–æ–∏–∑–Ω–æ—Å–∏—Ç—å..."
          )
        end
        
        send_with_delay(bot, message.chat.id, 7) do
          bot.api.send_message(
            chat_id: message.chat.id,
            text: "–í –•–æ–≥–≤–∞—Ä—Ç—Å–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–µ—á—Ç–æ —É–∂–∞—Å–Ω–æ–µ... —Ç–µ–º–Ω—ã–µ —Å–∏–ª—ã –ø—Ä–æ–Ω–∏–∫–ª–∏ –≤ —à–∫–æ–ª—É... –º—ã –Ω–µ –º–æ–∂–µ–º —Ç–µ—Ä—è—Ç—å –Ω–∏ —Å–µ–∫—É–Ω–¥—ã!"
          )
        end
        
        send_with_delay(bot, message.chat.id, 6) do
          bot.api.send_message(
            chat_id: message.chat.id,
            text: "–¢–æ–ª—å–∫–æ —Ç—ã, —Å —Ç–≤–æ–µ–π –æ–≥—Ä–æ–º–Ω–æ–π –¥—É—à–æ–π, –¥–æ–±—Ä—ã–º –∏ —á—É—Ç–∫–∏–º —Å–µ—Ä–¥—Ü–µ–º –º–æ–∂–µ—à—å —Å–ø–∞—Å—Ç–∏ –Ω–∞—Å –≤—Å–µ—Ö..."
          )
        end
        
        send_with_delay(bot, message.chat.id, 6) do
          bot.api.send_message(
            chat_id: message.chat.id,
            text: "–¢–µ–±–µ –Ω—É–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø—Ä–æ—à–ª–æ–µ –∏ –ø—Ä–æ–∏–∑–Ω–µ—Å—Ç–∏ –æ—Å–æ–±–æ–µ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ. –î–ª—è —ç—Ç–æ–≥–æ —è –æ—Å—Ç–∞–≤–∏–ª —Ç–µ–±–µ –ø–∞–ª–æ—á–∫—É –∏ –ú–∞—Ö–æ–≤–∏–∫ –í—Ä–µ–º–µ–Ω–∏ –≤ —Ç–≤–æ–µ–º —à–∫–∞—Ñ—É –Ω–∞ –∫—É—Ö–Ω–µ, –≥–¥–µ —Ç—ã —Ö—Ä–∞–Ω–∏—à—å –ª–µ–∫–∞—Ä—Å—Ç–≤–∞."
          )
        end
        
        send_with_delay(bot, message.chat.id, 7) do
          # –ö–Ω–æ–ø–∫–∞ "–ì–æ—Ç–æ–≤–æ" –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —ç—Ç–∞–ø–∞
          buttons = [[Telegram::Bot::Types::InlineKeyboardButton.new(
            text: '–ì–æ—Ç–æ–≤–æ',
            callback_data: "items_found"
          )]]
          
          markup = Telegram::Bot::Types::InlineKeyboardMarkup.new(inline_keyboard: buttons)
          
          bot.api.send_message(
            chat_id: message.chat.id,
            text: "–î–∞–π –∑–Ω–∞—Ç—å, –∫–æ–≥–¥–∞ –Ω–∞–π–¥–µ—à—å –ø–∞–ª–æ—á–∫—É –∏ –ú–∞—Ö–æ–≤–∏–∫ –í—Ä–µ–º–µ–Ω–∏...",
            reply_markup: markup
          )
        end

        user_progress[message.chat.id] = { stage: 'waiting_for_items' }

      when '/help'
        safe_send(bot, message.chat.id) do
          bot.api.send_message(
            chat_id: message.chat.id,
            text: "–°–ª–µ–¥—É–π —É–∫–∞–∑–∞–Ω–∏—è–º –ø—Ä–æ—Ñ–µ—Å—Å–æ—Ä–∞ –î–∞–º–±–ª–¥–æ—Ä–∞. –ù–∞–∂–∏–º–∞–π –∫–Ω–æ–ø–∫–∏, –∫–æ–≥–¥–∞ –±—É–¥–µ—à—å –≥–æ—Ç–æ–≤–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å."
          )
        end
      else
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è
        if user_progress[message.chat.id] && user_progress[message.chat.id][:stage] == 'waiting_for_spell'
          safe_send(bot, message.chat.id) do
            bot.api.send_message(
              chat_id: message.chat.id,
              text: "–î–æ—Ä–æ–≥–∞—è –Ω–∞—à–∞ –°—Ç–µ—à–∞, —Ç—ã —Å–º–æ–≥–ª–∞, —Ç—ã —Å–ø—Ä–∞–≤–∏–ª–∞—Å—å... –¢–≤–æ—è –º–∞–≥–∏—è –ª—é–±–≤–∏ –Ω–∞—Å—Ç–æ–ª—å–∫–æ —Å–∏–ª—å–Ω–∞, —á—Ç–æ —Ç—ã —Ä–∞–∑—Ä—É—à–∏–ª–∞ –≤—Å–µ –∑–ª—ã–µ —á–∞—Ä—ã! –¢—ã —Å–ø–∞—Å–ª–∞ –•–æ–≥–≤–∞—Ä—Ç—Å, —Å–ø–∞—Å–ª–∞ –ª—é–¥–µ–π, —Å–ø–∞—Å–ª–∞ —Å–µ–±—è –∏ —Å–≤–æ–∏—Ö –±–ª–∏–∑–∫–∏—Ö! üåü"
            )
          end
          
          send_with_delay(bot, message.chat.id, 6) do
            bot.api.send_animation(
              chat_id: message.chat.id,
              animation: Faraday::UploadIO.new('hogwarts_saved.gif', 'image/gif')
            )
          end
          
          send_with_delay(bot, message.chat.id, 6) do
            bot.api.send_message(
              chat_id: message.chat.id,
              text: "–ö–∞–∂–µ—Ç—Å—è, –∫—Ç–æ-—Ç–æ –∫ —Ç–µ–±–µ –ø—Ä–∏—à–µ–ª... –ò–¥–∏ –ø–æ–∑–¥–æ—Ä–æ–≤–∞–π—Å—è!",
              parse_mode: 'Markdown'
            )
          end
          
          # –û—á–∏—â–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
          user_progress.delete(message.chat.id)
        end
      end

    when Telegram::Bot::Types::CallbackQuery
      # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º callback_query —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
      begin
        case message.data
        when 'items_found'
          # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ
          safe_send(bot, message.from.id) do
            bot.api.answer_callback_query(callback_query_id: message.id, text: "–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! ‚ú®")
          end
          
          chat_id = message.from.id
          
          send_with_delay(bot, chat_id, 4) do
            bot.api.send_message(
              chat_id: chat_id,
              text: "–¢–µ–ø–µ—Ä—å –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –ú–∞—Ö–æ–≤–∏–∫–æ–º –í—Ä–µ–º–µ–Ω–∏... –º—ã –¥–æ–ª–∂–Ω—ã –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏—Å—å –Ω–∞–∑–∞–¥, –≤ –ø—Ä–æ—à–ª–æ–µ."
            )
          end
          
          send_with_delay(bot, chat_id, 5) do
            # –ö–Ω–æ–ø–∫–∞ "–ü–æ–∫—Ä—É—Ç–∏—Ç—å" –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –í–∏—Ö—Ä—è –í—Ä–µ–º–µ–Ω–∏
            buttons = [[Telegram::Bot::Types::InlineKeyboardButton.new(
              text: '–ü–æ–∫—Ä—É—Ç–∏—Ç—å –ú–∞—Ö–æ–≤–∏–∫ –í—Ä–µ–º–µ–Ω–∏',
              callback_data: "time_turn"
            )]]
            
            markup = Telegram::Bot::Types::InlineKeyboardMarkup.new(inline_keyboard: buttons)
            
            bot.api.send_message(
              chat_id: chat_id,
              text: "–ö–æ–≥–¥–∞ –±—É–¥–µ—à—å –≥–æ—Ç–æ–≤–∞...",
              reply_markup: markup
            )
          end
          
          user_progress[chat_id] = { stage: 'waiting_for_time_turn' }

        when 'time_turn'
          # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ
          safe_send(bot, message.from.id) do
            bot.api.answer_callback_query(callback_query_id: message.id, text: "–ú–∞—Ö–æ–≤–∏–∫ –∑–∞–ø—É—â–µ–Ω! ‚è≥")
          end
          
          chat_id = message.from.id
          
          send_with_delay(bot, chat_id, 3) do
            bot.api.send_animation(
              chat_id: chat_id,
              animation: Faraday::UploadIO.new('time_turner.gif', 'image/gif')
            )
          end
          
          send_with_delay(bot, chat_id, 6) do
            bot.api.send_message(
              chat_id: chat_id,
              text: "–¢—ã –≤–∏–¥–∏—à—å –ø—Ä–æ—à–ª–æ–µ... –≤–∏–¥–∏—à—å —Å–µ–±—è –º–∞–ª–µ–Ω—å–∫—É—é... –í–∏–¥–∏—à—å, –∫–∞–∫ —Ç—ã —Ä–æ—Å–ª–∞ –∏ –≤–∑—Ä–æ—Å–ª–µ–ª–∞, –∫–∞–∫ –º–µ—á—Ç–∞–ª–∞ –∏ —à–ª–∞ –∫ —Å–≤–æ–∏–º —Ü–µ–ª—è–º..."
            )
          end
          
          send_with_delay(bot, chat_id, 7) do
            bot.api.send_message(
              chat_id: chat_id,
              text: "–í–∏–¥–∏—à—å, –∫–∞–∫ –º–Ω–æ–≥–æ —É—á–∏–ª–∞—Å—å –∏ —Ç—Ä—É–¥–∏–ª–∞—Å—å... –ö–∞–∫ –ø—Ä–æ—Ö–æ–¥–∏–ª–∞ —ç—Ç–æ—Ç –±–æ–ª—å—à–æ–π –∂–∏–∑–Ω–µ–Ω–Ω—ã–π –ø—É—Ç—å... –ö–∞–∫ –º–Ω–æ–≥–æ —Ö–æ—Ä–æ—à–∏—Ö –ª—é–¥–µ–π –æ–∫—Ä—É–∂–∞–ª–æ –∏ –æ–±–µ—Ä–µ–≥–∞–ª–æ —Ç–µ–±—è –≤—Å–µ —ç—Ç–æ –≤—Ä–µ–º—è..."
            )
          end
          
          send_with_delay(bot, chat_id, 7) do
            bot.api.send_message(
              chat_id: chat_id,
              text: "–ò –≤–æ—Ç —Ç–µ–ø–µ—Ä—å —Ç—ã —Å—Ç–æ–∏—à—å —Ç—É—Ç, –Ω–∞ –ø–µ—Ä–µ–ø—É—Ç—å–µ —Å–≤–æ–µ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞, –≤ –º–æ–º–µ–Ω—Ç, –∫–æ–≥–¥–∞ –≤—Ä–µ–º—è –∏ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–ø–ª–µ—Ç–∞—é—Ç—Å—è, –∫–æ–≥–¥–∞ —É—Ä–æ–≤–µ–Ω—å –º–∞–≥–∏–∏ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –≤—Å–µ –≤—ã—Å–æ—Ç—ã, –∏ –≤–æ–ª—à–µ–±—Å—Ç–≤–æ –ø–æ—è–≤–ª—è–µ—Ç—Å—è —Ç–∞–º, –≥–¥–µ —Ç—ã –µ–≥–æ –Ω–µ –∂–¥–µ—à—å..."
            )
          end
          
          send_with_delay(bot, chat_id, 7) do
            bot.api.send_message(
              chat_id: chat_id,
              text: "–ò–º–µ–Ω–Ω–æ –∑–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å —Å–µ–±—è, –∏–∑–º–µ–Ω–∏—Ç—å –º–∏—Ä, –∏–∑–º–µ–Ω–∏—Ç—å —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å... –°–¥–µ–ª–∞—Ç—å –µ—ë –ª—É—á—à–µ, —Å–¥–µ–ª–∞—Ç—å –ª—É—á—à–µ —Å–µ–±—è –∏ –¥—Ä—É–≥–∏—Ö..."
            )
          end
          
          send_with_delay(bot, chat_id, 6) do
            bot.api.send_message(
              chat_id: chat_id,
              text: "–í—Å–ø–æ–º–Ω–∏ –ø—Ä–æ—à–ª–æ–µ... –ø–æ—Å–º–æ—Ç—Ä–∏ –Ω–∞ –Ω–∞—Å—Ç–æ—è—â–µ–µ... –ø–æ–¥—É–º–∞–π –æ –±—É–¥—É—â–µ–º..."
            )
          end
          
          send_with_delay(bot, chat_id, 5) do
            bot.api.send_message(
              chat_id: chat_id,
              text: "–í—Å–ø–æ–º–Ω–∏ –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ —Ä—è–¥–æ–º –∏ –∫–æ—Ç–æ—Ä—ã–µ —Ä—è–¥–æ–º —Å–µ–π—á–∞—Å... –ü–æ–¥—É–º–∞–π –æ —Ç–æ–º, –∫–∞–∫ —Ç–µ–±—è –ª—é–±—è—Ç –∏ —Ü–µ–Ω—è—Ç..."
            )
          end
          
          send_with_delay(bot, chat_id, 6) do
            bot.api.send_message(
              chat_id: chat_id,
              text: "–ü–æ–¥—É–º–∞–π –æ –ª—é–±–≤–∏, –∫–æ—Ç–æ—Ä–æ–π –ø–æ–ª–Ω–æ —Ç–≤–æ–µ —Å–µ—Ä–¥—Ü–µ... –í—Å–ø–æ–º–Ω–∏ –≤—Å–µ —Å–∞–º–æ–µ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ –∏–∑ —Å–≤–æ–µ–π –∂–∏–∑–Ω–∏..."
            )
          end
          
          send_with_delay(bot, chat_id, 6) do
            bot.api.send_message(
              chat_id: chat_id,
              text: "–ò –ø—Ä–æ–∏–∑–Ω–µ—Å–∏ –ª–∏—à—å –æ–¥–Ω–æ —Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã –≤–∏–¥–∏—à—å –ø–µ—Ä–µ–¥ –≥–ª–∞–∑–∞–º–∏... –æ–Ω–æ –∏ –±—É–¥–µ—Ç –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ–º...\n\n*–ù–∞–ø–∏—à–∏ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ:*",
              parse_mode: 'Markdown'
            )
          end
          
          user_progress[chat_id] = { stage: 'waiting_for_spell' }
        end
      rescue Telegram::Bot::Exceptions::ResponseError => e
        if e.error_code == 400 && (e.message.include?('query is too old') || e.message.include?('query ID is invalid'))
          puts "–ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–π callback: #{e.message}"
        else
          raise e
        end
      end
    end
  end
end