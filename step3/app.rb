require 'telegram/bot'

token = '8443547437:AAFVQDyVM8zLQYxfPIo7A4YX7y8T0BDJbR4'

# –•—ç—à –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_progress = {}

# –®–∞–≥–∏ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –∑–µ–ª—å—è
BREWING_STEPS = [
  {
    instruction: "1. –ù–∞–ª–µ–π –≤ —Å–æ—Ç–µ–π–Ω–∏–∫ 100 –º–ª –º–æ–ª–æ–∫–∞, –¥–æ–±–∞–≤—å 5-6 –∏—Ä–∏—Å–æ–∫, 1/2 –ª–æ–∂–∫—É –∫–æ—Ä–∏—Ü—ã –∏ 1/2 –ª–æ–∂–∫—É –∏–º–±–∏—Ä—è",
    gif: "step1.gif"
  },
  {
    instruction: "2. –†–∞—Å—Ç–æ–ø–∏ –∏—Ä–∏—Å–∫–∏ –¥–æ –Ω–µ–±–æ–ª—å—à–æ–≥–æ –∑–∞–≥—É—Å—Ç–µ–Ω–∏—è –æ–±—â–µ–π –º–∞—Å—Å—ã",
    gif: "step2.gif"
  },
  {
    instruction: "3. –î–æ–±–∞–≤—å –ø–ª–æ–º–±–∏—Ä (–æ–Ω –≤ –º–æ—Ä–æ–∑–∏–ª–∫–µ), –Ω–æ –Ω–µ –∑–∞–±—É–¥—å –æ—Å–≤–æ–±–æ–¥—å –∏–∑ –≤–∞—Ñ–µ–ª—å–Ω–æ–≥–æ —Å—Ç–∞–∫–∞–Ω—á–∏–∫–∞. –†–∞—Å—Ç–æ–ø–∏ –≤—Å—ë –¥–æ –æ–¥–Ω–æ—Ä–æ–¥–Ω–æ–π –º–∞—Å—Å—ã",
    gif: "step3.gif"
  },
  {
    instruction: "4. –ù–∞–ª–µ–π –≥–æ—Ç–æ–≤—É—é –º–∞—Å—Å—É –≤ —Å—Ç–∞–∫–∞–Ω",
    gif: "step4.gif"
  },
  {
    instruction: "5. –î–æ—Å—Ç–∞–Ω—å –∏–∑ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞ –±—É—Ç—ã–ª–æ—á–∫—É –ª–∏–º–æ–Ω–∞–¥–∞ –≤ —Å—Ç–µ–∫–ª–µ. –ó–∞–ø–æ–ª–Ω–∏ –ø–æ—á—Ç–∏ –¥–æ —Å–∞–º–æ–≥–æ –≤–µ—Ä—Ö–∞",
    gif: "step5.gif"
  },
  {
    instruction: "6. –°–ª–µ–≥–∫–∞ —Ä–∞–∑–º–µ—à–∞–π",
    gif: "step6.gif"
  },
  {
    instruction: "7. –î–æ—Å—Ç–∞–Ω—å –∏–∑ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞ –≤–∑–±–∏—Ç—ã–µ —Å–ª–∏–≤–∫–∏ –∏ —É–∫—Ä–∞—Å—å –±–æ–ª—å—à–æ–π –±–µ–ª–æ–π —à–∞–ø–∫–æ–π —ç—Ç–æ—Ç –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫",
    gif: "step7.gif"
  },
  {
    instruction: "8. –í–æ–∑—å–º–∏ —Ç—Ä—É–±–æ—á–∫—É –∏ –ø—Ä–æ–±—É–π!",
    gif: "step8.gif"
  }
]

# –ú–µ—Ç–æ–¥ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
def safe_send(bot, chat_id, &block)
  retries = 0
  begin
    block.call
  rescue Telegram::Bot::Exceptions::ResponseError => e
    if e.error_code == 429
      retry_after = e.response['parameters']['retry_after'] || 30
      puts "–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ñ–¥–µ–º #{retry_after} —Å–µ–∫—É–Ω–¥..."
      sleep(retry_after)
      retries += 1
      retry if retries <= 3
    else
      raise e
    end
  end
end

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–µ—Ç–æ–¥—ã –ø–µ—Ä–µ–¥ –æ—Å–Ω–æ–≤–Ω—ã–º –∫–æ–¥–æ–º
def send_brewing_step(bot, chat_id, step_index)
  step = BREWING_STEPS[step_index]
  
  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–∏—Ñ–∫—É —à–∞–≥–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
  safe_send(bot, chat_id) do
    bot.api.send_animation(
      chat_id: chat_id,
      animation: Faraday::UploadIO.new(step[:gif], 'image/gif')
    )
  end
  
  sleep(3) # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É
  
  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é —Å –∫–Ω–æ–ø–∫–æ–π
  buttons = [[Telegram::Bot::Types::InlineKeyboardButton.new(
    text: '–ì–æ—Ç–æ–≤–æ!',
    callback_data: "step_#{step_index}"
  )]]
  
  markup = Telegram::Bot::Types::InlineKeyboardMarkup.new(inline_keyboard: buttons)
  
  safe_send(bot, chat_id) do
    bot.api.send_message(
      chat_id: chat_id,
      text: step[:instruction],
      reply_markup: markup
    )
  end
end

def handle_step_completion(bot, message, user_progress)
  data_parts = message.data.split('_')
  step_index = data_parts[1].to_i
  
  user_id = message.from.id
  
  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏
  safe_send(bot, user_id) do
    bot.api.answer_callback_query(callback_query_id: message.id, text: "–ü—Ä–∏–Ω—è—Ç–æ! ‚úÖ")
  end
  
  if step_index + 1 < BREWING_STEPS.size
    # –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥
    user_progress[user_id] ||= {}
    user_progress[user_id][:current_step] = step_index + 1
    
    sleep(2) # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É
    
    # –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –°–Ω–µ–π–ø–∞ –º–µ–∂–¥—É —à–∞–≥–∞–º–∏
    snape_comments = [
      "–°–µ–≤–µ—Ä—É—Å - –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ... –∏ –ø–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –Ω–µ –≤–∑–æ—Ä–≤–∞—Ç—å –∫–æ—Ç–µ–ª –Ω–∞ —ç—Ç–æ—Ç —Ä–∞–∑.",
      "–°–µ–≤–µ—Ä—É—Å - –ú–µ–¥–ª–µ–Ω–Ω–æ... –æ—á–µ–Ω—å –º–µ–¥–ª–µ–Ω–Ω–æ...",
      "–°–µ–≤–µ—Ä—É—Å - –í—ã —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ –Ω–µ–∫–æ–æ—Ä–¥–∏–Ω–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è –≤–æ–ª—à–µ–±–Ω–∏—Ü—ã.",
      "–°–µ–≤–µ—Ä—É—Å - –î–∞–∂–µ –ø–µ—Ä–≤–æ–∫—É—Ä—Å–Ω–∏–∫ —Å–ø—Ä–∞–≤–∏–ª—Å—è –±—ã –ª—É—á—à–µ.",
      "–°–µ–≤–µ—Ä—É—Å - –ü–æ—Ç—Ä–∞—á–µ–Ω–æ —É–∂–µ 10 –º–∏–Ω—É—Ç... —Å–∫–æ–ª—å–∫–æ –º–æ–∂–Ω–æ?"
    ]
    
    safe_send(bot, user_id) do
      bot.api.send_message(
        chat_id: user_id,
        text: snape_comments.sample
      )
    end
    
    sleep(3) # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É
    
    send_brewing_step(bot, user_id, step_index + 1)
  else
    # –í—Å–µ —à–∞–≥–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã - —à—É—Ç–∫–∞ –æ—Ç "–¥—Ä—É–≥–∞"
    safe_send(bot, user_id) do
      bot.api.send_message(
        chat_id: user_id,
        text: "P.S. –∫–∞–∫ —Ç—ã —É–∂–µ –ø–æ–Ω—è–ª–∞, —ç—Ç–æ –Ω–µ –î–∞–º–±–ª–¥–æ—Ä, –∞ —Ç–≤–æ–π —Ö–æ—Ä–æ—à–∏–π –¥—Ä—É–≥, —Ö–∏—Ö–∏—Ö–∏—Ö–∏"
      )
    end
    
    sleep(4) # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É
    
    # –†–µ–∞–∫—Ü–∏—è –°–Ω–µ–π–ø–∞
    safe_send(bot, user_id) do
      bot.api.send_animation(
        chat_id: user_id,
        animation: Faraday::UploadIO.new('snape_reaction.gif', 'image/gif')
      )
    end
    
    sleep(3) # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É
    
    safe_send(bot, user_id) do
      bot.api.send_message(
        chat_id: user_id,
        text: "–ú–¥–∞, –≤—ã –¥–∞–∂–µ –Ω–µ —Å–º–æ–≥–ª–∏ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å —ç—Ç–∏–º –∑–∞–¥–∞–Ω–∏–µ–º –∏ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏... –ß—Ç–æ —ç—Ç–æ? –°–ª–∏–≤–æ—á–Ω–æ–µ –ø–∏–≤–æ!? –•–º... —ç—Ç–æ –º–æ–π –ª—é–±–∏–º—ã–π –Ω–∞–ø–∏—Ç–æ–∫."
      )
    end
    
    sleep(3) # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É
    
    safe_send(bot, user_id) do
      bot.api.send_message(
        chat_id: user_id,
        text: "–¢–∞–∫ —É–∂ –∏ –±—ã—Ç—å, —Å—Ç–∞–≤–ª—é –≤–∞–º –∑–∞—á–µ—Ç –º–∏—Å—Å –¢–æ–∫–∞—Ä–µ–≤–∞, –Ω–æ –ª–∏—à—å –≤ —ç—Ç–æ—Ç —Ä–∞–∑! –ê —Ç–µ–ø–µ—Ä—å —É—Ö–æ–¥–∏—Ç–µ, –≤–∞—Å –∂–¥—É—Ç –≤ —Å–ª–µ–¥—É—é—â–µ–π –∫–æ–º–Ω–∞—Ç–µ: t.me/dumbledore_dr_bot",
        parse_mode: 'Markdown'
      )
    end
    
    # –û—á–∏—â–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    user_progress.delete(user_id)
  end
end

# –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥ –±–æ—Ç–∞
Telegram::Bot::Client.run(token) do |bot|
  bot.listen do |message|
    case message
    when Telegram::Bot::Types::Message
      case message.text
      when '/start'
        # –°—É—Ä–æ–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –æ—Ç –°–Ω–µ–π–ø–∞
        safe_send(bot, message.chat.id) do
          bot.api.send_animation(
            chat_id: message.chat.id,
            animation: Faraday::UploadIO.new('snape_hello.gif', 'image/gif')
          )
        end

        safe_send(bot, message.chat.id) do
          bot.api.send_message(
            chat_id: message.chat.id,
            text: "–ú–∏—Å—Å –¢–æ–∫–∞—Ä–µ–≤–∞, –≤—ã –∑–∞—Å—Ç–∞–≤–ª—è–µ—Ç–µ –º–µ–Ω—è –∂–¥–∞—Ç—å. –í–∞–º –∫–∞–∂–µ—Ç—Å—è —ç—Ç–æ –∑–∞–±–∞–≤–Ω—ã–º? –°–µ–π—á–∞—Å –ø–æ—Å–º–æ—Ç—Ä–∏–º —á—Ç–æ —Ç—É—Ç –∑–∞–±–∞–≤–Ω–æ–≥–æ!"
          )
        end
        
        sleep(4) # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É
        
        # –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è
        safe_send(bot, message.chat.id) do
          bot.api.send_message(
            chat_id: message.chat.id,
            text: "–í—ã –¥–æ–ª–∂–Ω—ã –¥–æ–∫–∞–∑–∞—Ç—å —á—Ç–æ —è–≤–ª—è–µ—Ç–µ—Å—å –æ—Ç–ª–∏—á–Ω—ã–º –º–∞–≥–æ–º –∏ –∞–ª—Ö–∏–º–∏–∫–æ–º. –î–ª—è —ç—Ç–æ–≥–æ, —Å–æ–∑–¥–∞–π—Ç–µ –∑–µ–ª—å–µ –ø—Ä–µ–≤—Ä–∞—â–µ–Ω–∏—è."
          )
        end
        
        sleep(4) # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É
        
        # –°–∞—Ä–∫–∞—Å—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–º–µ—á–∞–Ω–∏–µ –æ –î–∞–º–±–ª–¥–æ—Ä–µ
        safe_send(bot, message.chat.id) do
          bot.api.send_message(
            chat_id: message.chat.id,
            text: "–ò –∫–∞–∫ –±—ã —è –Ω–µ —Ö–æ—Ç–µ–ª, –Ω–æ –î–∞–º–±–ª–¥–æ—Ä –ø—Ä–∏–∫–∞–∑–∞–ª –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –≤–∞–º —ç—Ç—É –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é... –Ω–æ —Ç–æ–≥–¥–∞ –∑–∞—á–µ–º –º–Ω–µ –≤–∞—Å –ø—Ä–æ–≤–µ—Ä—è—Ç—å? –í–ø—Ä–æ—á–µ–º –Ω–µ–≤–∞–∂–Ω–æ, –≤—ã –∏ —Å —ç—Ç–∏–º –Ω–µ —Å–ø—Ä–∞–≤–∏—Ç–µ—Å—å..."
          )
        end
        
        sleep(5) # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É
        
        # –°–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç "–¥—Ä—É–≥–∞"
        safe_send(bot, message.chat.id) do
          bot.api.send_photo(
            chat_id: message.chat.id,
            photo: Faraday::UploadIO.new('message.jpg', 'image/jpg'),
            caption: "'–¢–µ–∫—Å—Ç –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏'\n–°–µ–≤–µ—Ä—É—Å –µ—â—ë –Ω–µ –∑–Ω–∞–µ—Ç —á—Ç–æ —Ç—ã –±—É–¥–µ—à—å –≥–æ—Ç–æ–≤–∏—Ç—å —Å–ª–∏–≤–æ—á–Ω–æ–µ –ø–∏–≤–æ, –Ω–æ —Ç–∞–∫ –±—É–¥–µ—Ç –≤–µ—Å–µ–ª–µ–µ üòâ"
          )
        end
        
        sleep(4) # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É
        
        # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–∏—Å–∫—É –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤
        safe_send(bot, message.chat.id) do
          bot.api.send_message(
            chat_id: message.chat.id,
            text: "–í—Å–µ –∏–Ω–≥—Ä–∏–¥–∏–µ–Ω—Ç—ã —Ç—ã –Ω–∞–π–¥–µ—à—å –≤ —Å–≤–æ–µ–º –≤–µ—Ä—Ö–Ω–µ–º —à–∫–∞—Ñ—É (–≥–¥–µ —É —Ç–µ–±—è –æ–±—ã—á–Ω–æ –ª–µ–∂–∞—Ç —á–∏–ø—Å—ã), –≤ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–µ –∏ –º–æ—Ä–æ–∑–∏–ª–∫–µ"
          )
        end
        
        sleep(4) # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É
        
        safe_send(bot, message.chat.id) do
          bot.api.send_message(
            chat_id: message.chat.id,
            text: "–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–æ–∑—å–º–∏ —Å–≤–æ—é —Å–∞–º—É—é –±–æ–ª—å—à—É—é –∫—Ä—É–∂–∫—É!"
          )
        end
        
        sleep(3) # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É
        
        # –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–≤—ã–π —à–∞–≥ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è
        user_progress[message.chat.id] = { current_step: 0 }
        send_brewing_step(bot, message.chat.id, 0)

      when '/help'
        safe_send(bot, message.chat.id) do
          bot.api.send_message(
            chat_id: message.chat.id,
            text: "–°–ª–µ–¥—É–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –∏ –Ω–∞–∂–∏–º–∞–π '–ì–æ—Ç–æ–≤–æ!' –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–∞–∂–¥–æ–≥–æ —à–∞–≥–∞. –ò –ø–æ–º–Ω–∏ - –°–Ω–µ–π–ø –≤—Å–µ–≥–¥–∞ –Ω–∞–±–ª—é–¥–∞–µ—Ç..."
          )
        end
      end

    when Telegram::Bot::Types::CallbackQuery
      if message.data.start_with?('step_')
        handle_step_completion(bot, message, user_progress)
      end
    end
  end
end